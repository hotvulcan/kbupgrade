|
| Keyboard Upgrade -- A generic open source firmware for
|                     homebrew computer keyboard controllers
|                     based on Atmel AVR microcontrollers.
|
| E-Mail: kbupgrade@gmx.net

_                 _
=== Lawyer mode ===

Copyright (C) 2009  Robert Homann.

The Keyboard Upgrade package is published under the terms of the
GNU General Public License Version 2.0 (or any later version),
GNU GPL for short.
See the file COPYING distributed with this package for the license terms.


Keyboard Upgrade makes use of the V-USB driver by
Objective Development Software GmbH.
Their driver is licensed under the terms of the GNU GPL as long as it is not
used commercially. For the exact license terms, please see

  http://www.obdev.at/products/vusb/

or the License.txt file in the directory containing the V-USB version shipped
with this software package.


Keyboard Upgrade also makes use of a modified version of the
BootloadHID USB boot loader by Objective Development Software GmbH.
BootloadHID is licensed under the terms of the GNU GPL as long as it is not
used commercially. For the exact license terms, please see

  http://www.obdev.at/products/vusb/bootloadhid.html
  http://www.obdev.at/products/vusb/

or the License.txt file in the directory containing the BootloadHID version
shipped with this software package.


_              _
=== Building ===

First, configure the firmware by running the configure script. Please take a
look at the output of "configure --help".
In particular, make sure that the --with-avr-* options match your environment.

After configuration, either
- run "make" in the same directory where you have run "configure" to build the
  firmware for all keyboards supported by Keyboard Upgrade, and also the
  command line program for flashing the firmware via the boot loader;
- or go to the subdirectory below the firmware/ directory that is appropriate
  for your keyboard, and run "make" there to build just that particular
  firmware. The boot loader command line tool will not be built automatically
  in this case, and must be built by running "make" in its subdirectory below
  the tools/ directory.

Note that the boot loader command line tool ("bootloadHID") does not need to be
built with every updated version of Keyboard Upgrade. You may build it once and
put it conveniently somewhere in your path.

After compiling the firmware, two relevant files will have been created in its
respective directory: "boot.hex" (containing the boot loader) and "main.hex"
(containing the main firmware code).
Do not get confused by the files called "boot" and "main"; these have been
created for mere "technical reasons" and are not important for programming the
microcontroller.

_                _
=== Installing ===

Now, connect your AVR to your programmer, and type

$ make fuses
$ make flashboot

to program your AVR's fuses and to install the boot loader. (Of course, this
only works if you are using a programmer supported by the Keyboard Upgrade
build system. If not, you'll need to extend the build system, or program
manually.)
Your AVR is now prepared to be programmed with the main firmware code directly
over USB using the "bootloadHID" program. (See further below for instructions
for programming without using bootloadHID.) Therefore, you may also want to run

$ make lock

to write-protect the boot loader. Locking the boot loader does not mean that
you cannot program it ever again---another "make flashboot" will happily write
the boot loader once more.
But locking prevents the microcontroller to kill its own boot loader by
accident, so it is generally a very good idea to do this.

To flash the main firmware code to your keyboard, connect it to a USB port
while holding down the key that is used to activate the boot loader. For
instance, if you are using an IBM Model M, press ESC, keep it depressed, and
plug the keyboard into your USB port. The LEDs will start flashing to indicate
that the boot loader is activated, ready to receive a firmware image. You may
release the ESC key now. Now, type (on a different keyboard)

$ bootloadHID -r main.hex

The -r option causes the keyboard to reset itself after the firmware has been
flashed; re-plug the keyboard (or reset if you built in a reset switch) if you
forgot to give option.

If you do not have or do not want to use a another keyboard for typing in the
above command, type, e.g.,

$ sleep 10 && bootloadHID -r main.hex

on your keyboard to be flashed, hit enter, and re-plug your keyboard within 10
seconds with the key held down that activates the boot loader.


If you don't want to use the boot loader, or cannot use it on your system, you
can also program the main firmware code using your AVR programmer by typing

$ make fuses
$ make flashboot
$ make flash
$ make lock

Note that you still need to write the boot loader to the microcontroller unless
you have programmed the AVR's fuses not to use the boot loader ("make fuses"
will always program the AVR to use one).


Have fun!
